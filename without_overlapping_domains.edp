// n is the number of mesh for each border


int n =10;
int O1 = 99; int O2=98; int gamma = 100;
int M=20,i;
real cond = 1;
real theta = 0.5;
real norm=1;
real epsilon = 10^(-2);

// Creating the borders

border O11(t=0,2){ x=t; y=0; label=O1;};
border O12(t=0,1){ x=2; y=t; label=O1;};
border O13(t=0,1){ x=2-t; y=1; label=O1;};
border O14(t=0,1){ x=1-t; y=1-t; label=gamma;};

//border O21(t=0,1){ x=t; y=t; label=O2;};
border O22(t=0,1){ x=1; y=1+t; label=O2;};
border O23(t=0,1){ x=1-t; y=2; label=O2;};
border O24(t=0,2){ x=0; y=2-t; label=O2;};

plot( O11(1) + O12(1) + O13(1) +O14(1) + O22(1) + O23(1) + O24(1),wait = true);

// Meshing

mesh Th1=buildmesh( O11(2*n) + O12(n) + O13(n) + O14(2*n));
mesh Th2=buildmesh( O14(-2*n) + O22(n) + O23(n) + O24(2*n));

plot(Th1,Th2,wait=1);

// defining the domains

fespace Vh1(Th1,P2);
fespace Vh2(Th2,P2);

Vh1 u,v,u0,g;
Vh2 U,V,U0;

U=0; u=0;
func f=x*y^2;

// more complicated function
//func f=sin(2*pi*x)*sin(2*pi*y);

for(i=0;i<M;i++){
	u0=u;
	solve Poisson1(u,v,solver=LU) =
		int2d(Th1)(dx(u)*dx(v) + dy(u)*dy(v))
		- int2d(Th1)(f*v)
		+ on(O1, u=0) + on(gamma, u=g);
	
	U0=U;
	solve Poisson2(U,V,solver=LU) =
		int2d(Th2)(dx(U)*dx(V) + dy(U)*dy(V))
		- int2d(Th2)(f*V) - int1d(Th2,gamma)((dx(u)*N.x + dy(u)*N.y)*V)
		+ on(O2, U=0);
	
	norm = sqrt(int2d(Th1)((u-u0)^2) + int2d(Th2)((U-U0)^2));
	g = theta*U + (1-theta)*g;
	plot(u,U,wait=1);
}

plot(u,U,wait=1);

